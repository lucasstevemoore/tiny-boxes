/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import { Contract, ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import { ContractEvent, Callback, TransactionObject, BlockType } from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export class LinkTokenInterface extends Contract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  );
  clone(): LinkTokenInterface;
  methods: {
    allowance(owner: string, spender: string): TransactionObject<string>;

    approve(
      spender: string,
      value: number | string
    ): TransactionObject<boolean>;

    balanceOf(owner: string): TransactionObject<string>;

    decimals(): TransactionObject<string>;

    decreaseApproval(
      spender: string,
      addedValue: number | string
    ): TransactionObject<boolean>;

    increaseApproval(
      spender: string,
      subtractedValue: number | string
    ): TransactionObject<void>;

    name(): TransactionObject<string>;

    symbol(): TransactionObject<string>;

    totalSupply(): TransactionObject<string>;

    transfer(to: string, value: number | string): TransactionObject<boolean>;

    transferAndCall(
      to: string,
      value: number | string,
      data: string | number[]
    ): TransactionObject<boolean>;

    transferFrom(
      from: string,
      to: string,
      value: number | string
    ): TransactionObject<boolean>;
  };
  events: {
    allEvents: (
      options?: EventOptions,
      cb?: Callback<EventLog>
    ) => EventEmitter;
  };
}
