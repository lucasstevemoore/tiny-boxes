/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import { Contract, ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import { ContractEvent, Callback, TransactionObject, BlockType } from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export class TinyBoxesRenderer extends Contract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  );
  clone(): TinyBoxesRenderer;
  methods: {
    ANIMATION_COUNT(): TransactionObject<string>;

    perpetualRenderer(
      box: {
        shapes: number | string;
        hatching: number | string;
        mirroring: (number | string)[];
        size: (number | string)[];
        spacing: (number | string)[];
        color: {
          hue: number | string;
          saturation: number | string;
          lightness: number | string;
        };
        contrast: number | string;
      },
      randomness: number | string,
      animate: boolean,
      id: number | string,
      owner: string
    ): TransactionObject<string>;
  };
  events: {
    allEvents: (
      options?: EventOptions,
      cb?: Callback<EventLog>
    ) => EventEmitter;
  };
}
